name: Update project metadata

on:
  push:
    branches:
      - master


jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      chains: ${{ steps.chains.outputs.any_changed }}
      dapps: ${{ steps.dapps.outputs.any_changed }}
      chains_dev: ${{ steps.chains_dev.outputs.any_changed }}
      xcm: ${{ steps.xcm_chains.outputs.any_changed }}
    steps:
      - name: Checkout current repository to Master branch
        uses: actions/checkout@v1

      - name: Set up actual paths
        uses: ./.github/workflows/setup-path

      - name: Was chains.json changed?
        id: chains
        uses: tj-actions/changed-files@v18.2
        with:
          files: |
            ${{ env.CHAINS_JSON_PATH }}

      - name: Was dapps.json changed?
        id: dapps
        uses: tj-actions/changed-files@v18.2
        with:
          files: |
            dapps/dapps.json

      - name: Was chains_dev changed?
        id: chains_dev
        uses: tj-actions/changed-files@v18.2
        with:
          files: |
            ${{ env.DEV_CHAINS_JSON_PATH }}

      - name: Was xcm list changed?
        id: xcm_chains
        uses: tj-actions/changed-files@v18.2
        with:
          files: |
            ${{ env.XCM_JSON_PATH }}
            ${{ env.DEV_XCM_JSON_PATH }}

  chains_update:
    runs-on: ubuntu-latest
    needs: check
    if: always() && (needs.check.outputs.chains == 'true')
    steps:
      - name: Checkout current repository to Master branch
        uses: actions/checkout@v1

      - name: Set up actual paths
        uses: ./.github/workflows/setup-path

      - name: Install dependencies
        run: make init
      - name: Generate README file
        run: make generate_network_list

      - name: Make Pull Request
        uses: ./.github/workflows/make-pull-request
        with:
          commit-files: ./chains/README.md
          commit-message: Update networks list
          app-id: ${{ secrets.PR_APP_ID}}
          app-token: ${{ secrets.PR_APP_TOKEN}}
          branch-name: update-networks-readme
          pr-title: Update network list
          pr-body: Update networks list in https://github.com/novasamatech/nova-utils/tree/master/chains
          pr-base: master


  dapps_update:
    runs-on: ubuntu-latest
    needs: check
    if: always() && (needs.check.outputs.dapps == 'true')
    steps:
      - name: Checkout current repository to Master branch
        uses: actions/checkout@v1

      - name: Set up actual paths
        uses: ./.github/workflows/setup-path

      - name: Install dependencies
        run: make init
      - name: Generate new Dapps list file
        run: make generate_dapp_list

      - name: Make Pull Request
        uses: ./.github/workflows/make-pull-request
        with:
          commit-files: ./dapps/README.md
          commit-message: Update dapps list
          app-id: ${{ secrets.PR_APP_ID}}
          app-token: ${{ secrets.PR_APP_TOKEN}}
          branch-name: update-dapps-readme
          pr-title: Update Dapps list
          pr-body: Update dapps list in https://github.com/novasamatech/nova-utils/tree/master/dapps
          pr-base: master

  test_json_update:
    runs-on: ubuntu-latest
    needs: check
    if: always() && (needs.check.outputs.chains_dev == 'true')
    steps:
      - name: Checkout current repository to Master branch
        uses: actions/checkout@v1

      - name: Set up actual paths
        uses: ./.github/workflows/setup-path

      - name: Install dependencies
        run: make init
      - name: Generate new Test data file
        run: make generate_test_file

      - name: Make Pull Request
        uses: ./.github/workflows/make-pull-request
        with:
          commit-files: ./tests/chains_for_testBalance.json
          commit-message: Update test data file
          app-id: ${{ secrets.PR_APP_ID}}
          app-token: ${{ secrets.PR_APP_TOKEN}}
          branch-name: update-test-file
          pr-title: Update Test data File
          pr-body: Update test data file ./tests/chains_for_testBalance.json
          pr-base: master


  xcm_table_update:
    runs-on: ubuntu-latest
    needs: check
    if: always() && (needs.check.outputs.xcm == 'true')
    steps:
      - name: Checkout current repository
        uses: actions/checkout@v1

      - name: Checkout support repo
        uses: actions/checkout@v1
        with:
          path: ./support
          repository: nova-wallet/support-utils
          ref: master
          token: ${{ secrets.PAT_TOKEN }}

      - name: Set up actual paths
        uses: ./.github/workflows/setup-path

      - uses: actions/setup-python@v4
        with:
          python-version: '3.9.15'

      - name: Install dependencies
        run: |
          cd ../support
          pip install -r ./requirements.txt

      - name: Generate new xcm list
        run: |
          cd ../support
          python ./nova-utils/generate_xcm_google_table.py
